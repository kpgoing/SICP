#lang racket
(define (cont-frac2 n d k)
  (define (iter i result)
    (if (= i 0)
        result
        (iter (- i 1)
              (/ (n i)
                 (+ (d i) result)))))
  (iter (- k 1)
        (/ (n k) (d k))))
(define (tan-cf x k)
  (let ((sqrtx (* x x))
        (evenofk (- (* k 2) 1)))
  (define (iter i result)
    (cond ((= i 0) result)
          ((= i 1) (iter (- i 1) (/ x (- evenofk result))))
        (else (iter (- i 1)
              (/ sqrtx (- evenofk result))))))
  (iter (- k 1)
        (/ sqrtx evenofk))))
(tan-cf 3.14159 100)
(tan 3.14159)